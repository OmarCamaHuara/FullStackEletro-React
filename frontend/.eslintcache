[{"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\index.js":"1","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\App.js":"2","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\routes.js":"3","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Header\\Header.js":"4","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Footer\\Footer.js":"5","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Header\\Categorias.js":"6","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Produtos\\index.js":"7","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Contatos\\index.js":"8","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Lojas\\index.js":"9","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Home\\index.js":"10","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Pedidos\\index.js":"11"},{"size":163,"mtime":1606900566922,"results":"12","hashOfConfig":"13"},{"size":501,"mtime":1607041073806,"results":"14","hashOfConfig":"13"},{"size":667,"mtime":1606959723366,"results":"15","hashOfConfig":"13"},{"size":1109,"mtime":1606961625019,"results":"16","hashOfConfig":"13"},{"size":1020,"mtime":1606918480289,"results":"17","hashOfConfig":"13"},{"size":2037,"mtime":1606995685880,"results":"18","hashOfConfig":"13"},{"size":2151,"mtime":1607049664115,"results":"19","hashOfConfig":"13"},{"size":3396,"mtime":1607039319324,"results":"20","hashOfConfig":"13"},{"size":1260,"mtime":1607042231914,"results":"21","hashOfConfig":"13"},{"size":328,"mtime":1606921887552,"results":"22","hashOfConfig":"13"},{"size":89,"mtime":1606904381456,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1oo8w7r",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\index.js",[],["49","50"],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\App.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\routes.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Header\\Header.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Footer\\Footer.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\components\\Header\\Categorias.js",["51","52","53","54","55","56"],"import {Link, withRouter } from 'react-router-dom';\r\n\r\nfunction CategoriasUm(){\r\n\r\n    function exibirCategoria(categoria){\r\n        let elementos = document.getElementsByClassName('box_produto')\r\n        for(var i = 0; i<=elementos.length; i++){\r\n            if(categoria === elementos[i].id){\r\n                elementos[i].style = 'display:block'\r\n            }else{\r\n                elementos[i].style = 'display:none'\r\n            }\r\n        }\r\n    }\r\n\r\n    let exibirTodo = () => {\r\n        let elementos = document.getElementsByClassName('box_produto')\r\n        for(var i = 0; i<=elementos.length; i++){\r\n            elementos[i].style = 'display: block'\r\n        }   \r\n    }\r\n    return(\r\n        <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn btn-info font-\">\r\n            <a className=\"text-white text-decoration-none\" as={Link} to=\"/produtos\" href=\"/produtos\">Produtos</a>\r\n            </button>\r\n\r\n            <button type=\"button\" className=\"btn btn-info dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span className=\"sr-only\">Toggle Dropdown</span>\r\n            </button>\r\n                <div className=\"dropdown-menu\">\r\n                    <a className=\"dropdown-item\" onClick={exibirTodo}>Todos</a>\r\n                    <a className=\"dropdown-item\" onClick={() => exibirCategoria('geladeira')}>Geladeiras</a>\r\n                    <a className=\"dropdown-item\" onClick={() => exibirCategoria('fogao')}>Fogões</a>\r\n                    <a className=\"dropdown-item\" onClick={() => exibirCategoria('microondas')}>Microondas</a>\r\n                    <a className=\"dropdown-item\" onClick={() => exibirCategoria('lavaRoupa')}>Lavadouras de Ropas</a>\r\n                    <a className=\"dropdown-item\" onClick={() => exibirCategoria('lavaLouca')}>Lava_Louças</a>\r\n                </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\n const Categorias = withRouter(CategoriasUm)\r\n\r\n export default Categorias;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Produtos\\index.js",["57","58"],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Contatos\\index.js",["59","60","61"],"import Gmail from '../../img/gmail.png';\r\nimport Whatsapp from '../../img/whatsapp.png';\r\nimport './styles.css';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst Contatos = () =>{\r\n\r\n    const [comentarios, setComentarios] = useState([]);\r\n    const [render, setRender] = useState(false);\r\n    const [msg , setMsg] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        const url = \"http://localhost/proyectoFullStack/FullStackEletro-Ract/Backend/indexCom.php\";\r\n        const response = await fetch(url);\r\n        setComentarios(await response.json());\r\n    }, [render])\r\n\r\n\r\n\r\n    async function registerComent(event){\r\n        event.preventDefault();\r\n        let formData = new FormData(event.target);\r\n\r\n        const url = \"http://localhost/proyectoFullStack/FullStackEletro-Ract/Backend/Comentarios.php\";\r\n\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then((response) => response.json()).then((dados) => {\r\n            setRender(!render);\r\n            setMsg(dados);\r\n            setTimeout(() => {\r\n                setMsg(false);\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"container mt-5\">\r\n        <header>\r\n            <h2 className=\"text-info\">Contato!</h2>\r\n        </header>\r\n        <hr />\r\n        <section className=\"filiais\">\r\n            <div className=\"contacto\">\r\n                <img src={Gmail} />\r\n                contacto@fullstackeletro\r\n            </div>\r\n            <div className=\"contacto\">\r\n                <img src={Whatsapp} />\r\n                (11) 980808286\r\n            </div>\r\n        </section>\r\n\r\n        \r\n        <section className=\"formulario\">\r\n\r\n            <form onSubmit={registerComent}>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleFormControlInput1\">Nome:</label>\r\n                    <input type=\"text\" className=\"form-control\"  name=\"nome\" id=\"exampleFormControlInput1\" placeholder=\"Seu nome\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleFormControlTextarea1\">Mensaje:</label>\r\n                    <textarea className=\"form-control\" name=\"msg\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary btn-lg btn-block\">Enviar</button>\r\n            </form>\r\n\r\n        </section>\r\n\r\n\r\n        { msg && <div className=\"alert alert-success mx-auto mt-4 w-75\" role=\"alert\">\r\n            Cadastro efectuado com sucesso\r\n        </div>\r\n\r\n        }\r\n\r\n            <h2>Comentarios</h2>\r\n            \r\n            <section className=\"comen\">\r\n                {\r\n                    comentarios.map((element) => {\r\n                        return (\r\n\r\n                            <div key={element.comentario_id} className=\"card w-50 mx-auto mt-3\">\r\n                                <div className=\"card-header\">\r\n                                    {element.nome}\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    Mensaje: {element.msg}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }).reverse()\r\n                }\r\n\r\n                \r\n            </section>\r\n    </div>\r\n    );\r\n}\r\nexport default Contatos;","C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Lojas\\index.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Home\\index.js",[],"C:\\xampp\\htdocs\\proyectoFullStack\\FullStackEletro-Ract\\frontend\\src\\pages\\Pedidos\\index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":32,"column":21,"nodeType":"68","endLine":32,"endColumn":71},{"ruleId":"66","severity":1,"message":"67","line":33,"column":21,"nodeType":"68","endLine":33,"endColumn":95},{"ruleId":"66","severity":1,"message":"67","line":34,"column":21,"nodeType":"68","endLine":34,"endColumn":91},{"ruleId":"66","severity":1,"message":"67","line":35,"column":21,"nodeType":"68","endLine":35,"endColumn":96},{"ruleId":"66","severity":1,"message":"67","line":36,"column":21,"nodeType":"68","endLine":36,"endColumn":95},{"ruleId":"66","severity":1,"message":"67","line":37,"column":21,"nodeType":"68","endLine":37,"endColumn":95},{"ruleId":"69","severity":1,"message":"70","line":7,"column":19,"nodeType":"71","endLine":11,"endColumn":10},{"ruleId":"66","severity":1,"message":"67","line":43,"column":37,"nodeType":"68","endLine":43,"endColumn":79},{"ruleId":"69","severity":1,"message":"70","line":12,"column":15,"nodeType":"71","endLine":16,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":47,"column":17,"nodeType":"68","endLine":47,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":51,"column":17,"nodeType":"68","endLine":51,"endColumn":39},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]